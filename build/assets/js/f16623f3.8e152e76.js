"use strict";(self.webpackChunkpgsdocs=self.webpackChunkpgsdocs||[]).push([[1756],{2220:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>Ne,contentTitle:()=>Se,default:()=>ke,frontMatter:()=>fe,metadata:()=>t,toc:()=>De});const t=JSON.parse('{"type":"mdx","permalink":"/playground","source":"@site/src/pages/playground.mdx","title":"Playground","description":"<Translate","frontMatter":{"title":"Playground","hide_table_of_contents":true},"unlisted":false}');var s=r(4848),a=r(8453),o=r(9324),i=r(9030),l=r(6289),c=r(7164),u=r(6540);const d="PgTestSelector_tHDw",p="PgSelectorTitle_cWoN";function m(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:'  const Invoice = () => {\r\n  const [clientName, setClientName] = useState(\'\');\r\n  const [amount, setAmount] = useState(\'\');\r\n  const [date, setDate] = useState(\'\');\r\n  const [status, setStatus] = useState(\'Non pay\xe9\');\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [invoicePreview, setInvoicePreview] = useState(null);\r\n\r\n  const generateInvoicePreview = (e) => {\r\n    e.preventDefault();\r\n    if (clientName.trim() && amount.trim() && !isNaN(amount)) {\r\n      setInvoicePreview({\r\n        clientName,\r\n        amount,\r\n        date,\r\n        status,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addInvoice = () => {\r\n    if (invoicePreview) {\r\n      setInvoices([...invoices, { ...invoicePreview, id: Date.now() }]);\r\n      setClientName(\'\');\r\n      setAmount(\'\');\r\n      setDate(\'\');\r\n      setStatus(\'Non pay\xe9\');\r\n      setInvoicePreview(null);\r\n    }\r\n  };\r\n\r\n  const updateInvoiceStatus = (id, newStatus) => {\r\n    setInvoices(invoices.map((inv) => (inv.id === id ? { ...inv, status: newStatus } : inv)));\r\n  };\r\n\r\n  const totalDue = invoices\r\n    .filter((inv) => inv.status === \'Non pay\xe9\')\r\n    .reduce((sum, inv) => sum + parseFloat(inv.amount), 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de facture</h2>\r\n\r\n      <form onSubmit={generateInvoicePreview}>\r\n        <div>\r\n          <label htmlFor="clientName">Nom du client :</label>\r\n          <input\r\n            type="text"\r\n            id="clientName"\r\n            value={clientName}\r\n            onChange={(e) => setClientName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="amount">Montant (francs CFA) :</label>\r\n          <input\r\n            type="number"\r\n            id="amount"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="date">Date :</label>\r\n          <input\r\n            type="date"\r\n            id="date"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="status">Statut :</label>\r\n          <select\r\n            id="status"\r\n            value={status}\r\n            onChange={(e) => setStatus(e.target.value)}\r\n          >\r\n            <option value="Non pay\xe9">Non pay\xe9</option>\r\n            <option value="Pay\xe9">Pay\xe9</option>\r\n          </select>\r\n        </div>\r\n        <button type="submit">Voir la facture</button>\r\n      </form>\r\n\r\n      {invoicePreview && (\r\n        <div>\r\n          <h2>Aper\xe7u</h2>\r\n          <p>\r\n            <strong>Nom du client :</strong> {invoicePreview.clientName}\r\n          </p>\r\n          <p>\r\n            <strong>Montant :</strong> {invoicePreview.amount}  francs CFA\r\n          </p>\r\n          <p>\r\n            <strong>Date :</strong> {invoicePreview.date}\r\n          </p>\r\n          <p>\r\n            <strong>Statut :</strong> {invoicePreview.status}\r\n          </p>\r\n          <button onClick={addInvoice}>Ajouter \xe0 la liste des factures</button>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <h2>Liste des factures</h2>\r\n        <ul>\r\n          {invoices.map((inv) => (\r\n            <li key={inv.id}>\r\n              <span>\r\n                {inv.date} : {inv.clientName} - {inv.amount} francs CFA ({inv.status})\r\n              </span>\r\n              <select\r\n                value={inv.status}\r\n                onChange={(e) => updateInvoiceStatus(inv.id, e.target.value)}\r\n              >\r\n                <option value="Non pay\xe9">Non pay\xe9</option>\r\n                <option value="Pay\xe9">Pay\xe9</option>\r\n              </select>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Total \xe0 payer : {totalDue.toFixed(0)}  francs CFA</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Invoice />);\n'})})}function v(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}function h(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"  const Expense = () => {\r\n  const [expense, setExpense] = useState({\r\n    description: '',\r\n    amount: '',\r\n    category: 'Alimentation',\r\n  });\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const categories = ['Alimentation', 'Transport', 'Divertissement', 'Factures', 'Autre'];\r\n\r\n  const handleAddExpense = () => {\r\n    if (expense.description && expense.amount && !isNaN(expense.amount)) {\r\n      const newExpense = { ...expense, id: Date.now() };\r\n      const newExpenses = [...expenses, newExpense];\r\n      setExpenses(newExpenses);\r\n      setTotal(newExpenses.reduce((sum, item) => sum + parseFloat(item.amount), 0));\r\n      setExpense({ description: '', amount: '', category: 'Alimentation' });\r\n    } else {\r\n      alert('Veuillez entrer des d\xe9tails valides pour la d\xe9pense.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de d\xe9penses</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={expense.description}\r\n          onChange={(e) => setExpense({ ...expense, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Montant\"\r\n          value={expense.amount}\r\n          onChange={(e) => setExpense({ ...expense, amount: e.target.value })}\r\n        />\r\n        <select\r\n          value={expense.category}\r\n          onChange={(e) => setExpense({ ...expense, category: e.target.value })}\r\n        >\r\n          {categories.map((category) => (\r\n            <option key={category} value={category}>\r\n              {category}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleAddExpense}>Ajouter la d\xe9pense</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Liste des d\xe9penses</h2>\r\n        <ul>\r\n          {expenses.map((exp) => (\r\n            <li key={exp.id}>\r\n              <span>\r\n                {exp.description} : {exp.amount} francs CFA ({exp.category})\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Total des d\xe9penses : {total.toFixed(0)} francs CFA</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Expense />);\n"})})}function x(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function g(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:'  const Payslip = () => {\r\n  const [employeeName, setEmployeeName] = useState(\'\');\r\n  const [basicSalary, setBasicSalary] = useState(\'\');\r\n  const [taxRate, setTaxRate] = useState(\'\');\r\n  const [payslipPreview, setPayslipPreview] = useState(null);\r\n\r\n  const calculatePayslip = (e) => {\r\n    e.preventDefault();\r\n    const grossSalary = parseFloat(basicSalary);\r\n    const tax = grossSalary * (parseFloat(taxRate) / 100);\r\n    const netSalary = grossSalary - tax;\r\n\r\n    setPayslipPreview({\r\n      employeeName,\r\n      grossSalary,\r\n      tax,\r\n      netSalary,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de salaire</h2>\r\n      <form onSubmit={calculatePayslip}>\r\n        <div>\r\n          <label htmlFor="employeeName">Nom de l\'employ\xe9 :</label>\r\n          <input\r\n            type="text"\r\n            id="employeeName"\r\n            value={employeeName}\r\n            onChange={(e) => setEmployeeName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="basicSalary">Salaire de Base (francs CFA) :</label>\r\n          <input\r\n            type="number"\r\n            id="basicSalary"\r\n            value={basicSalary}\r\n            onChange={(e) => setBasicSalary(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="taxRate">Taux d\'Imposition (%) :</label>\r\n          <input\r\n            type="number"\r\n            id="taxRate"\r\n            value={taxRate}\r\n            onChange={(e) => setTaxRate(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type="submit">G\xe9n\xe9rer la fiche</button>\r\n      </form>\r\n\r\n      {payslipPreview && (\r\n        <div>\r\n          <h2>Aper\xe7u</h2>\r\n          <p>\r\n            <strong>Nom de l\'employ\xe9 :</strong> {payslipPreview.employeeName}\r\n          </p>\r\n          <p>\r\n            <strong>Salaire Brut :</strong> {payslipPreview.grossSalary.toFixed(2)}  francs CFA\r\n          </p>\r\n          <p>\r\n            <strong>Imp\xf4ts :</strong> {payslipPreview.tax.toFixed(2)}  francs CFA\r\n          </p>\r\n          <p>\r\n            <strong>Salaire Net :</strong> {payslipPreview.netSalary.toFixed(2)}  francs CFA\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Payslip />);\n'})})}function y(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function b(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:'  const Contrat = () => {\r\n  const [employeeName, setEmployeeName] = useState(\'\');\r\n  const [position, setPosition] = useState(\'\');\r\n  const [startDate, setStartDate] = useState(\'\');\r\n  const [salary, setSalary] = useState(\'\');\r\n  const [contractPreview, setContractPreview] = useState(null);\r\n\r\n  const generateContract = (e) => {\r\n    e.preventDefault();\r\n    setContractPreview({\r\n      employeeName,\r\n      position,\r\n      startDate,\r\n      salary,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de Contrat</h2>\r\n      <form onSubmit={generateContract}>\r\n        <div>\r\n          <label htmlFor="employeeName">Nom de l\'employ\xe9 :</label>\r\n          <input\r\n            type="text"\r\n            id="employeeName"\r\n            value={employeeName}\r\n            onChange={(e) => setEmployeeName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="position">Poste :</label>\r\n          <input\r\n            type="text"\r\n            id="position"\r\n            value={position}\r\n            onChange={(e) => setPosition(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="startDate">Date de d\xe9but :</label>\r\n          <input\r\n            type="date"\r\n            id="startDate"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="salary">Salaire (francs CFA) :</label>\r\n          <input\r\n            type="number"\r\n            id="salary"\r\n            value={salary}\r\n            onChange={(e) => setSalary(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type="submit">G\xe9n\xe9rer le Contrat</button>\r\n      </form>\r\n\r\n      {contractPreview && (\r\n        <div>\r\n          <h2>Aper\xe7u</h2>\r\n          <p>\r\n            <strong>Nom de l\'employ\xe9 :</strong> {contractPreview.employeeName}\r\n          </p>\r\n          <p>\r\n            <strong>Poste :</strong> {contractPreview.position}\r\n          </p>\r\n          <p>\r\n            <strong>Date de d\xe9but :</strong> {contractPreview.startDate}\r\n          </p>\r\n          <p>\r\n            <strong>Salaire mensuel :</strong> {contractPreview.salary} francs CFA\r\n          </p>\r\n          <p>\r\n            Ce contrat confirme que <strong>{contractPreview.employeeName}</strong> sera employ\xe9(e) en tant que <strong>{contractPreview.position}</strong>, \xe0 partir du <strong>{contractPreview.startDate}</strong>, avec un salaire de <strong>{contractPreview.salary} francs CFA</strong> par mois.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Contrat />);\n'})})}function j(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}function C(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"  const Employee = () => {\r\n  const [employees, setEmployees] = useState([\r\n    { id: 1, name: 'Alice', presentDays: 20, absentDays: 2 },\r\n    { id: 2, name: 'Bob', presentDays: 18, absentDays: 4 },\r\n    { id: 3, name: 'Charlie', presentDays: 22, absentDays: 0 },\r\n  ]);\r\n  const [newEmployee, setNewEmployee] = useState('');\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [bestEmployee, setBestEmployee] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (employees.length > 0) {\r\n      const best = employees.reduce((prev, current) => {\r\n        const prevRatio = prev.presentDays / (prev.presentDays + prev.absentDays || 1);\r\n        const currRatio = current.presentDays / (current.presentDays + current.absentDays || 1);\r\n        return currRatio > prevRatio ? current : prev;\r\n      });\r\n      setBestEmployee(best);\r\n    }\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    if (selectedEmployee) {\r\n      const updatedEmployee = employees.find((emp) => emp.id === selectedEmployee.id);\r\n      setSelectedEmployee(updatedEmployee);\r\n    }\r\n  }, [employees, selectedEmployee]);\r\n\r\n  const addEmployee = () => {\r\n    if (newEmployee.trim()) {\r\n      setEmployees([\r\n        ...employees,\r\n        { id: Date.now(), name: newEmployee, presentDays: 0, absentDays: 0 },\r\n      ]);\r\n      setNewEmployee('');\r\n    }\r\n  };\r\n\r\n  const updateAttendance = (id, type) => {\r\n    setEmployees(\r\n      employees.map((emp) =>\r\n        emp.id === id\r\n          ? {\r\n              ...emp,\r\n              presentDays: type === 'present' ? emp.presentDays + 1 : emp.presentDays,\r\n              absentDays: type === 'absent' ? emp.absentDays + 1 : emp.absentDays,\r\n            }\r\n          : emp\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur Gestion employ\xe9s</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Entrez le nom de l'employ\xe9\"\r\n          value={newEmployee}\r\n          onChange={(e) => setNewEmployee(e.target.value)}\r\n        />\r\n        <button onClick={addEmployee}>Ajouter l'Employ\xe9</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Liste des employ\xe9s</h2>\r\n        <ul>\r\n          {employees.map((emp) => (\r\n            <li key={emp.id}>\r\n              <span onClick={() => setSelectedEmployee(emp)}>{emp.name}</span>\r\n              <div>\r\n                <button onClick={() => updateAttendance(emp.id, 'present')}>+ Pr\xe9sent</button>\r\n                <button onClick={() => updateAttendance(emp.id, 'absent')}>+ Absent</button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {selectedEmployee && (\r\n        <div>\r\n          <h2>Aper\xe7u de {selectedEmployee.name}</h2>\r\n          <p>Jours pr\xe9sents : {selectedEmployee.presentDays}</p>\r\n          <p>Jours absents : {selectedEmployee.absentDays}</p>\r\n          <p>Total des jours : {selectedEmployee.presentDays + selectedEmployee.absentDays}</p>\r\n        </div>\r\n      )}\r\n\r\n      {bestEmployee && (\r\n        <div>\r\n          <h2>\ud83c\udfc6 Meilleur employ\xe9 : {bestEmployee.name}</h2>\r\n          <p>\r\n            F\xe9licitations {bestEmployee.name} ! Vous avez un total de {bestEmployee.presentDays}{' '}\r\n            jours de pr\xe9sence contre {bestEmployee.absentDays} jours d'absence, atteignant un\r\n            ratio de performance de{' '}\r\n            {(\r\n              (bestEmployee.presentDays /\r\n                (bestEmployee.presentDays + bestEmployee.absentDays || 1)) *\r\n              100\r\n            ).toFixed(2)}\r\n            %.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Employee />);\n"})})}function f(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(C,{...e})}):C(e)}function S(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:'  const Mail = () => {\r\n    const [recipient, setRecipient] = useState(\'\');\r\n    const [subject, setSubject] = useState(\'\');\r\n    const [message, setMessage] = useState(\'\');\r\n    const [emailPreview, setEmailPreview] = useState(null);\r\n\r\n    const sendEmail = (e) => {\r\n      e.preventDefault();\r\n      setEmailPreview({\r\n        recipient,\r\n        subject,\r\n        message,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h2>Simulateur de courriel</h2>\r\n        <form onSubmit={sendEmail}>\r\n          <div>\r\n            <label htmlFor="recipient">Destinataire :</label>\r\n            <input\r\n              type="email"\r\n              id="recipient"\r\n              value={recipient}\r\n              onChange={(e) => setRecipient(e.target.value)}\r\n              placeholder="exemple@domaine.com"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor="subject">Objet :</label>\r\n            <input\r\n              type="text"\r\n              id="subject"\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor="message">Message :</label>\r\n            <textarea\r\n              id="message"\r\n              rows="5"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              placeholder="\xc9crivez votre message ici..."\r\n            />\r\n          </div>\r\n          <button type="submit">Envoyer l\'email</button>\r\n        </form>\r\n\r\n        {emailPreview && (\r\n          <div>\r\n            <h2>Aper\xe7u</h2>\r\n            <p>\r\n              <strong>\xc0 :</strong> {emailPreview.recipient}\r\n            </p>\r\n            <p>\r\n              <strong>Objet :</strong> {emailPreview.subject}\r\n            </p>\r\n            <p>\r\n              <strong>Message :</strong>\r\n            </p>\r\n            <p>{emailPreview.message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n};\r\n\r\nrender(<Mail />);\n'})})}function N(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(S,{...e})}):S(e)}function D(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:'  const Document = () => {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [currentFile, setCurrentFile] = useState(null);\r\n  const [filePreview, setFilePreview] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setCurrentFile(file);\r\n      const objectUrl = URL.createObjectURL(file);\r\n      setFilePreview(objectUrl);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (currentFile) {\r\n      setDocuments([...documents, currentFile]);\r\n      setCurrentFile(null);\r\n      setFilePreview(null);\r\n    } else {\r\n      alert("Veuillez s\xe9lectionner un fichier \xe0 t\xe9l\xe9verser.");\r\n    }\r\n  };\r\n\r\n  const handleDelete = (file) => {\r\n    setDocuments(documents.filter((document) => document !== file));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de documents</h2>\r\n\r\n      <div>\r\n        <input\r\n          type="file"\r\n          onChange={handleFileChange}\r\n          accept=".pdf, .doc, .docx, .jpg, .png"\r\n        />\r\n        {filePreview && (\r\n          <div>\r\n            <h2>Aper\xe7u</h2>\r\n            <div>\r\n              {currentFile.type.startsWith(\'image/\') ? (\r\n                <img src={filePreview} alt="aper\xe7u" style={{ maxWidth: \'50%\' }} />\r\n              ) : (\r\n                <p>Aper\xe7u du fichier non disponible</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <button onClick={handleUpload} disabled={!currentFile}>\r\n          T\xe9l\xe9charger le document\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Documents t\xe9l\xe9charg\xe9s</h2>\r\n        <ul>\r\n          {documents.map((file, index) => (\r\n            <li key={index}>\r\n              <span>{file.name}</span>\r\n              <button onClick={() => handleDelete(file)}>Supprimer</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Document />);\n'})})}function w(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(D,{...e})}):D(e)}function k(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"  const Task = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('Toutes');\r\n\r\n  const addTask = () => {\r\n    if (newTask.trim()) {\r\n      setTasks([...tasks, { id: Date.now(), name: newTask, status: 'En attente' }]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const updateTaskStatus = (id, status) => {\r\n    setTasks(tasks.map((task) => (task.id === id ? { ...task, status } : task)));\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const filteredTasks =\r\n    statusFilter === 'Toutes'\r\n      ? tasks\r\n      : tasks.filter((task) => task.status === statusFilter);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de t\xe2che</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ajouter une nouvelle t\xe2che\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button onClick={addTask}>Ajouter</button>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Filtrer par statut :</label>\r\n        <select value={statusFilter} onChange={(e) => setStatusFilter(e.target.value)}>\r\n          <option value=\"Toutes\">Toutes</option>\r\n          <option value=\"En attente\">En attente</option>\r\n          <option value=\"Termin\xe9e\">Termin\xe9e</option>\r\n        </select>\r\n      </div>\r\n\r\n      <ul>\r\n        {filteredTasks.map((task) => (\r\n          <li key={task.id}>\r\n            <span\r\n              style={{\r\n                textDecoration: task.status === 'Termin\xe9e' ? 'line-through' : 'none',\r\n                color: task.status === 'En attente' ? 'red' : 'green',\r\n              }}\r\n            >\r\n              {task.name}\r\n            </span>\r\n\r\n            <select\r\n              value={task.status}\r\n              onChange={(e) => updateTaskStatus(task.id, e.target.value)}\r\n            >\r\n              <option value=\"En attente\">En attente</option>\r\n              <option value=\"Termin\xe9e\">Termin\xe9e</option>\r\n            </select>\r\n            <button onClick={() => deleteTask(task.id)}>Supprimer</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Task />);\n"})})}function P(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(k,{...e})}):k(e)}function F(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"  const questions = [\r\n  {\r\n    id: 1,\r\n    question: 'Quelle est la capitale du B\xe9nin ?',\r\n    options: ['Porto-Novo', 'Dassa-Zounm\xe8', 'Cotonou', 'Lokossa'],\r\n    correctAnswer: 'Porto-Novo',\r\n  },\r\n  {\r\n    id: 2,\r\n    question: 'Quelle est la langue dominante au B\xe9nin ?',\r\n    options: ['S\xe8t\xf4', 'Fon', 'Yoruba', 'Adja'],\r\n    correctAnswer: 'Fon',\r\n  },\r\n  {\r\n    id: 3,\r\n    question: 'Combien font 2 + 2 ?',\r\n    options: ['3', '4', '5', '6'],\r\n    correctAnswer: '4',\r\n  },\r\n];\r\n\r\nconst Quiz = () => {\r\n  const [answers, setAnswers] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const handleChange = (questionId, selectedAnswer) => {\r\n    setAnswers({ ...answers, [questionId]: selectedAnswer });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  const score = questions.reduce((score, question) => {\r\n    if (answers[question.id] === question.correctAnswer) {\r\n      score += 1;\r\n    }\r\n    return score;\r\n  }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de questionnaire</h2>\r\n\r\n      <div>\r\n        {questions.map((question) => (\r\n          <div key={question.id}>\r\n            <p>{question.question}</p>\r\n            <div>\r\n              {question.options.map((option) => (\r\n                <label key={option}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`question-${question.id}`}\r\n                    value={option}\r\n                    checked={answers[question.id] === option}\r\n                    onChange={() => handleChange(question.id, option)}\r\n                    disabled={isSubmitted}\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleSubmit}\r\n        disabled={isSubmitted}\r\n      >\r\n        Soumettre le test\r\n      </button>\r\n\r\n      {isSubmitted && (\r\n        <div>\r\n          <h3>Votre note : {score} / {questions.length}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Quiz />);\n"})})}function A(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(F,{...e})}):F(e)}function E(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live noInline",live:!0,children:"  import { Line, Doughnut, Bar } from {require('react-chartjs-2')};\r\n\r\n  const data = {\r\n  labels: ['Jan', 'F\xe9v', 'Mars', 'Avr', 'Mai', 'Juin'],\r\n  datasets: [\r\n    {\r\n      label: 'D\xe9penses',\r\n      data: [500, 700, 300, 800, 600, 400],\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      borderColor: 'rgb(255, 99, 132)',\r\n      tension: 0.1,\r\n    },\r\n    {\r\n      label: 'Revenus',\r\n      data: [1000, 1200, 900, 1300, 1100, 1400],\r\n      backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n      borderColor: 'rgb(54, 162, 235)',\r\n      tension: 0.1,\r\n    },\r\n  ],\r\n};\r\n\r\nconst doughnutData = {\r\n  labels: ['D\xe9penses', 'Revenus'],\r\n  datasets: [\r\n    {\r\n      data: [3700, 6000],\r\n      backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)'],\r\n      hoverBackgroundColor: ['rgb(255, 159, 192)', 'rgb(75, 192, 235)'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false, \r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: \"Performance de l'entreprise\",\r\n    },\r\n    tooltip: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n    legend: {\r\n      labels: {\r\n        font: {\r\n          size: 12,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    x: {\r\n      ticks: {\r\n        font: {\r\n          size: 10,\r\n        },\r\n      },\r\n    },\r\n    y: {\r\n      ticks: {\r\n        font: {\r\n          size: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [selectedChart, setSelectedChart] = useState('line');\r\n\r\n  const renderChart = () => {\r\n    switch (selectedChart) {\r\n      case 'line':\r\n        return <Line data={data} options={options} />;\r\n      case 'doughnut':\r\n        return <Doughnut data={doughnutData} />;\r\n      case 'bar':\r\n        return <Bar data={data} options={options} />;\r\n      default:\r\n        return <Line data={data} options={options} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tableau de bord</h2>\r\n\r\n      <div>\r\n        <label htmlFor=\"chartType\">Type de graphique :</label>\r\n        <select\r\n          id=\"chartType\"\r\n          value={selectedChart}\r\n          onChange={(e) => setSelectedChart(e.target.value)}\r\n        >\r\n          <option value=\"line\">Ligne</option>\r\n          <option value=\"doughnut\">Anneau</option>\r\n          <option value=\"bar\">Barres</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        {renderChart()}\r\n      </div>\r\n\r\n      <div>\r\n        <div>\r\n          <h3>D\xe9penses totales</h3>\r\n          <p>3 700 francs CFA</p>\r\n        </div>\r\n        <div>\r\n          <h3>Revenus totaux</h3>\r\n          <p>6 000 francs CFA</p>\r\n        </div>\r\n        <div>\r\n          <h3>B\xe9n\xe9fice</h3>\r\n          <p>2 300 francs CFA</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Dashboard />);\n"})})}function T(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(E,{...e})}):E(e)}const I=()=>{const[e,n]=(0,u.useState)("none");let r;switch(e){case"Invoice":r=v;break;case"Expense":r=x;break;case"Payslip":r=y;break;case"Contrat":r=j;break;case"Employee":r=f;break;case"Mail":r=N;break;case"Document":r=w;break;case"Task":r=P;break;case"Quiz":r=A;break;case"Dashboard":r=T;break;default:r=null}return(0,s.jsxs)("div",{style:{display:"flex",justifyContent:"center",flexDirection:"column"},children:[(0,s.jsxs)("select",{onChange:e=>{n(e.target.value)},value:e,style:{marginBottom:"10px",padding:"10px",border:"1px solid #ccc",borderRadius:"5px"},children:[(0,s.jsx)("option",{value:"none",children:"-- Selectionner --"}),(0,s.jsx)("option",{value:"Invoice",children:"Facture"}),(0,s.jsx)("option",{value:"Expense",children:"D\xe9penses"}),(0,s.jsx)("option",{value:"Payslip",children:"Fiche de paie"}),(0,s.jsx)("option",{value:"Contrat",children:"Contrat"}),(0,s.jsx)("option",{value:"Employee",children:"Employ\xe9"}),(0,s.jsx)("option",{value:"Mail",children:"Couriel"}),(0,s.jsx)("option",{value:"Document",children:"Importer document"}),(0,s.jsx)("option",{value:"Task",children:"T\xe2ches"}),(0,s.jsx)("option",{value:"Quiz",children:"Question \xe0 choix multiple"}),(0,s.jsx)("option",{value:"Dashboard",children:"Tableau de bord"})]}),(0,s.jsx)("div",{children:r?(0,s.jsx)(r,{}):(0,s.jsx)("p",{children:"Aucun simulateur s\xe9lectionn\xe9."})})]})},R={PgCompCont:"PgCompCont_TFW_",formGroup:"formGroup_egL0",addInvoice:"addInvoice_XJqt",PgCompBtn:"PgCompBtn_Frqw",preview:"preview_N_hG",invoiceList:"invoiceList_Y985",question:"question_kbw_",expenseList:"expenseList_GydL",uploadedDocuments:"uploadedDocuments_kyLP",summaryBox:"summaryBox_pzGB",inlineResult:"inlineResult_iUY1",deleteBtn:"deleteBtn_vjJD",taskInput:"taskInput_M9WC",expenseInput:"expenseInput_iQs7",employeeList:"employeeList_VQd5",taskList:"taskList_RxXC",documentItem:"documentItem_tdis",taskName:"taskName_diwR",pending:"pending_zB9p",invName:"invName_hwmF",unpaid:"unpaid_ghBM",completed:"completed_ZIA2",paid:"paid_u95X",employeeMessage:"employeeMessage_slwI",filter:"filter_L1oB",addEmployee:"addEmployee_WMfo",attendanceActions:"attendanceActions__EFN",options:"options_hIoE",chartSelector:"chartSelector_rJce",chartContainer:"chartContainer_zXWl",summaryContainer:"summaryContainer_AKDj"};var _=r(4164);const B=()=>{const[e,n]=(0,u.useState)(""),[r,t]=(0,u.useState)(""),[a,o]=(0,u.useState)(""),[i,l]=(0,u.useState)("Non pay\xe9"),[c,d]=(0,u.useState)([]),[p,m]=(0,u.useState)(null),v=c.filter((e=>"Non pay\xe9"===e.status)).reduce(((e,n)=>e+parseFloat(n.amount)),0);return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur de facture"}),(0,s.jsxs)("form",{onSubmit:n=>{n.preventDefault(),e.trim()&&r.trim()&&!isNaN(r)&&m({clientName:e,amount:r,date:a,status:i})},className:R.formGroup,children:[(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"clientName",children:"Nom du client :"}),(0,s.jsx)("input",{type:"text",id:"clientName",value:e,onChange:e=>n(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"amount",children:"Montant (francs CFA) :"}),(0,s.jsx)("input",{type:"number",id:"amount",value:r,onChange:e=>t(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"date",children:"Date :"}),(0,s.jsx)("input",{type:"date",id:"date",value:a,onChange:e=>o(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"status",children:"Statut :"}),(0,s.jsxs)("select",{id:"status",value:i,onChange:e=>l(e.target.value),children:[(0,s.jsx)("option",{value:"Non pay\xe9",children:"Non pay\xe9"}),(0,s.jsx)("option",{value:"Pay\xe9",children:"Pay\xe9"})]})]}),(0,s.jsx)("button",{type:"submit",className:R.PgCompBtn,children:"Voir la facture"})]}),p&&(0,s.jsxs)("div",{className:R.preview,children:[(0,s.jsx)("h2",{children:"Aper\xe7u"}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Nom du client :"})," ",p.clientName]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Montant :"})," ",p.amount,"  francs CFA"]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Date :"})," ",p.date]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Statut :"})," ",p.status]}),(0,s.jsx)("button",{onClick:()=>{p&&(d([...c,{...p,id:Date.now()}]),n(""),t(""),o(""),l("Non pay\xe9"),m(null))},className:R.PgCompBtn,children:"Ajouter \xe0 la liste des factures"})]}),(0,s.jsxs)("div",{className:R.invoiceList,children:[(0,s.jsx)("h2",{children:"Liste des factures"}),(0,s.jsx)("ul",{children:c.map((e=>(0,s.jsxs)("li",{children:[(0,s.jsxs)("span",{className:(0,_.A)(R.invName,{[R.paid]:"Pay\xe9"===e.status,[R.unpaid]:"Non pay\xe9"===e.status}),children:[e.date," : ",e.clientName," - ",e.amount," francs CFA (",e.status,")"]}),(0,s.jsxs)("select",{value:e.status,onChange:n=>{return r=e.id,t=n.target.value,void d(c.map((e=>e.id===r?{...e,status:t}:e)));var r,t},children:[(0,s.jsx)("option",{value:"Non pay\xe9",children:"Non pay\xe9"}),(0,s.jsx)("option",{value:"Pay\xe9",children:"Pay\xe9"})]})]},e.id)))})]}),(0,s.jsx)("div",{className:R.inlineResult,children:(0,s.jsxs)("h3",{children:["Total \xe0 payer : ",v.toFixed(0),"  francs CFA"]})})]})},q=()=>{const[e,n]=(0,u.useState)({description:"",amount:"",category:"Alimentation"}),[r,t]=(0,u.useState)([]),[a,o]=(0,u.useState)(0);return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur de d\xe9penses"}),(0,s.jsxs)("div",{className:R.expenseInput,children:[(0,s.jsx)("input",{type:"text",placeholder:"Description",value:e.description,onChange:r=>n({...e,description:r.target.value})}),(0,s.jsx)("input",{type:"number",placeholder:"Montant",value:e.amount,onChange:r=>n({...e,amount:r.target.value})}),(0,s.jsx)("select",{value:e.category,onChange:r=>n({...e,category:r.target.value}),children:["Alimentation","Transport","Divertissement","Factures","Autre"].map((e=>(0,s.jsx)("option",{value:e,children:e},e)))}),(0,s.jsx)("button",{onClick:()=>{if(e.description&&e.amount&&!isNaN(e.amount)){const s={...e,id:Date.now()},a=[...r,s];t(a),o(a.reduce(((e,n)=>e+parseFloat(n.amount)),0)),n({description:"",amount:"",category:"Alimentation"})}else alert("Veuillez entrer des d\xe9tails valides pour la d\xe9pense.")},className:R.PgCompBtn,children:"Ajouter la d\xe9pense"})]}),(0,s.jsxs)("div",{className:R.expenseList,children:[(0,s.jsx)("h2",{children:"Liste des d\xe9penses"}),(0,s.jsx)("ul",{children:r.map((e=>(0,s.jsx)("li",{children:(0,s.jsxs)("span",{children:[e.description," : ",e.amount," francs CFA (",e.category,")"]})},e.id)))})]}),(0,s.jsx)("div",{className:R.inlineResult,children:(0,s.jsxs)("h3",{children:["Total des d\xe9penses : ",a.toFixed(0)," francs CFA"]})})]})},L=()=>{const[e,n]=(0,u.useState)(""),[r,t]=(0,u.useState)(""),[a,o]=(0,u.useState)(""),[i,l]=(0,u.useState)(null);return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur de salaire"}),(0,s.jsxs)("form",{onSubmit:n=>{n.preventDefault();const t=parseFloat(r),s=t*(parseFloat(a)/100);l({employeeName:e,grossSalary:t,tax:s,netSalary:t-s})},children:[(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"employeeName",children:"Nom de l'employ\xe9 :"}),(0,s.jsx)("input",{type:"text",id:"employeeName",value:e,onChange:e=>n(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"basicSalary",children:"Salaire de Base (francs CFA) :"}),(0,s.jsx)("input",{type:"number",id:"basicSalary",value:r,onChange:e=>t(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"taxRate",children:"Taux d'Imposition (%) :"}),(0,s.jsx)("input",{type:"number",id:"taxRate",value:a,onChange:e=>o(e.target.value)})]}),(0,s.jsx)("button",{type:"submit",className:R.PgCompBtn,children:"G\xe9n\xe9rer la fiche"})]}),i&&(0,s.jsxs)("div",{className:R.preview,children:[(0,s.jsx)("h2",{children:"Aper\xe7u"}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Nom de l'employ\xe9 :"})," ",i.employeeName]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Salaire Brut :"})," ",i.grossSalary.toFixed(2),"  francs CFA"]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Imp\xf4ts :"})," ",i.tax.toFixed(2),"  francs CFA"]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Salaire Net :"})," ",i.netSalary.toFixed(2),"  francs CFA"]})]})]})},H=()=>{const[e,n]=(0,u.useState)(""),[r,t]=(0,u.useState)(""),[a,o]=(0,u.useState)(""),[i,l]=(0,u.useState)(""),[c,d]=(0,u.useState)(null);return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur de Contrat"}),(0,s.jsxs)("form",{onSubmit:n=>{n.preventDefault(),d({employeeName:e,position:r,startDate:a,salary:i})},children:[(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"employeeName",children:"Nom de l'employ\xe9 :"}),(0,s.jsx)("input",{type:"text",id:"employeeName",value:e,onChange:e=>n(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"position",children:"Poste :"}),(0,s.jsx)("input",{type:"text",id:"position",value:r,onChange:e=>t(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"startDate",children:"Date de d\xe9but :"}),(0,s.jsx)("input",{type:"date",id:"startDate",value:a,onChange:e=>o(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"salary",children:"Salaire (francs CFA) :"}),(0,s.jsx)("input",{type:"number",id:"salary",value:i,onChange:e=>l(e.target.value)})]}),(0,s.jsx)("button",{type:"submit",className:R.PgCompBtn,children:"G\xe9n\xe9rer le Contrat"})]}),c&&(0,s.jsxs)("div",{className:R.preview,children:[(0,s.jsx)("h2",{children:"Aper\xe7u"}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Nom de l'employ\xe9 :"})," ",c.employeeName]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Poste :"})," ",c.position]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Date de d\xe9but :"})," ",c.startDate]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Salaire mensuel :"})," ",c.salary," francs CFA"]}),(0,s.jsxs)("p",{children:["Ce contrat confirme que ",(0,s.jsx)("strong",{children:c.employeeName})," sera employ\xe9(e) en tant que ",(0,s.jsx)("strong",{children:c.position}),", \xe0 partir du ",(0,s.jsx)("strong",{children:c.startDate}),", avec un salaire de ",(0,s.jsxs)("strong",{children:[c.salary," francs CFA"]})," par mois."]})]})]})},M=()=>{const[e,n]=(0,u.useState)([{id:1,name:"Alice",presentDays:20,absentDays:2},{id:2,name:"Bob",presentDays:18,absentDays:4},{id:3,name:"Charlie",presentDays:22,absentDays:0}]),[r,t]=(0,u.useState)(""),[a,o]=(0,u.useState)(null),[i,l]=(0,u.useState)(null);(0,u.useEffect)((()=>{if(e.length>0){const n=e.reduce(((e,n)=>{const r=e.presentDays/(e.presentDays+e.absentDays||1);return n.presentDays/(n.presentDays+n.absentDays||1)>r?n:e}));l(n)}}),[e]),(0,u.useEffect)((()=>{if(a){const n=e.find((e=>e.id===a.id));o(n)}}),[e,a]);const c=(r,t)=>{n(e.map((e=>e.id===r?{...e,presentDays:"present"===t?e.presentDays+1:e.presentDays,absentDays:"absent"===t?e.absentDays+1:e.absentDays}:e)))};return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur Gesion employ\xe9s"}),(0,s.jsxs)("div",{className:R.addEmployee,children:[(0,s.jsx)("input",{type:"text",placeholder:"Entrez le nom de l'employ\xe9",value:r,onChange:e=>t(e.target.value)}),(0,s.jsx)("button",{onClick:()=>{r.trim()&&(n([...e,{id:Date.now(),name:r,presentDays:0,absentDays:0}]),t(""))},className:R.PgCompBtn,children:"Ajouter l'employ\xe9"})]}),(0,s.jsxs)("div",{className:R.employeeList,children:[(0,s.jsx)("h2",{children:"Liste des employ\xe9s"}),(0,s.jsx)("ul",{children:e.map((e=>(0,s.jsxs)("li",{children:[(0,s.jsx)("span",{onClick:()=>o(e),children:e.name}),(0,s.jsxs)("div",{className:R.attendanceActions,children:[(0,s.jsx)("button",{onClick:()=>c(e.id,"present"),children:"+ Pr\xe9sent"}),(0,s.jsx)("button",{onClick:()=>c(e.id,"absent"),children:"+ Absent"})]})]},e.id)))})]}),a&&(0,s.jsxs)("div",{className:R.preview,children:[(0,s.jsxs)("h2",{children:["Aper\xe7u de ",a.name]}),(0,s.jsxs)("p",{children:["Jours pr\xe9sents : ",a.presentDays]}),(0,s.jsxs)("p",{children:["Jours absents : ",a.absentDays]}),(0,s.jsxs)("p",{children:["Total des jours : ",a.presentDays+a.absentDays]})]}),i&&(0,s.jsxs)("div",{className:R.employeeMessage,children:[(0,s.jsxs)("h2",{children:["\ud83c\udfc6 Meilleur employ\xe9 : ",i.name]}),(0,s.jsxs)("p",{children:["F\xe9licitations ",i.name," ! Vous avez un total de ",i.presentDays," ","jours de pr\xe9sence contre ",i.absentDays," jours d'absence, atteignant un ratio de performance de"," ",(i.presentDays/(i.presentDays+i.absentDays||1)*100).toFixed(2),"%."]})]})]})},z=()=>{const[e,n]=(0,u.useState)(""),[r,t]=(0,u.useState)(""),[a,o]=(0,u.useState)(""),[i,l]=(0,u.useState)(null);return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur de courriel"}),(0,s.jsxs)("form",{onSubmit:n=>{n.preventDefault(),l({recipient:e,subject:r,message:a})},children:[(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"recipient",children:"Destinataire :"}),(0,s.jsx)("input",{type:"email",id:"recipient",value:e,onChange:e=>n(e.target.value),placeholder:"exemple@domaine.com"})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"subject",children:"Objet :"}),(0,s.jsx)("input",{type:"text",id:"subject",value:r,onChange:e=>t(e.target.value)})]}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("label",{htmlFor:"message",children:"Message :"}),(0,s.jsx)("textarea",{id:"message",rows:"5",value:a,onChange:e=>o(e.target.value),placeholder:"\xc9crivez votre message ici..."})]}),(0,s.jsx)("button",{type:"submit",className:R.PgCompBtn,children:"Envoyer l'email"})]}),i&&(0,s.jsxs)("div",{className:R.preview,children:[(0,s.jsx)("h2",{children:"Aper\xe7u"}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"\xc0 :"})," ",i.recipient]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Objet :"})," ",i.subject]}),(0,s.jsx)("p",{children:(0,s.jsx)("strong",{children:"Message :"})}),(0,s.jsx)("p",{children:i.message})]})]})},G=()=>{const[e,n]=(0,u.useState)([]),[r,t]=(0,u.useState)(null),[a,o]=(0,u.useState)(null);return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur de documents"}),(0,s.jsxs)("div",{className:R.formGroup,children:[(0,s.jsx)("input",{type:"file",onChange:e=>{const n=e.target.files[0];if(n){t(n);const e=URL.createObjectURL(n);o(e)}},accept:".pdf, .doc, .docx, .jpg, .png"}),a&&(0,s.jsxs)("div",{className:R.Preview,children:[(0,s.jsx)("h2",{children:"Aper\xe7u"}),(0,s.jsx)("div",{className:R.preview,children:r.type.startsWith("image/")?(0,s.jsx)("img",{src:a,alt:"aper\xe7u"}):(0,s.jsx)("p",{children:"Aper\xe7u du fichier non disponible"})})]}),(0,s.jsx)("button",{onClick:()=>{r?(n([...e,r]),t(null),o(null)):alert("Veuillez s\xe9lectionner un fichier \xe0 t\xe9l\xe9verser.")},disabled:!r,className:R.PgCompBtn,children:"T\xe9l\xe9charger le document"})]}),(0,s.jsxs)("div",{className:R.uploadedDocuments,children:[(0,s.jsx)("h2",{children:"Documents t\xe9l\xe9charg\xe9s"}),(0,s.jsx)("ul",{children:e.map(((r,t)=>(0,s.jsxs)("li",{className:R.documentItem,children:[(0,s.jsx)("span",{children:r.name}),(0,s.jsx)("button",{className:R.deleteBtn,onClick:()=>(r=>{n(e.filter((e=>e!==r)))})(r),children:"Supprimer"})]},t)))})]})]})},U=()=>{const[e,n]=(0,u.useState)([]),[r,t]=(0,u.useState)(""),[a,o]=(0,u.useState)("Toutes"),i="Toutes"===a?e:e.filter((e=>e.status===a));return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur de t\xe2che"}),(0,s.jsxs)("div",{className:R.taskInput,children:[(0,s.jsx)("input",{type:"text",placeholder:"Ajouter une nouvelle t\xe2che",value:r,onChange:e=>t(e.target.value)}),(0,s.jsx)("button",{onClick:()=>{r.trim()&&(n([...e,{id:Date.now(),name:r,status:"En attente"}]),t(""))},className:R.PgCompBtn,children:"Ajouter"})]}),(0,s.jsxs)("div",{className:R.filter,children:[(0,s.jsx)("label",{children:"Filtrer par statut :"}),(0,s.jsxs)("select",{value:a,onChange:e=>o(e.target.value),children:[(0,s.jsx)("option",{value:"Toutes",children:"Toutes"}),(0,s.jsx)("option",{value:"En attente",children:"En attente"}),(0,s.jsx)("option",{value:"Termin\xe9e",children:"Termin\xe9e"})]})]}),(0,s.jsx)("ul",{className:R.taskList,children:i.map((r=>(0,s.jsxs)("li",{children:[(0,s.jsx)("span",{className:(0,_.A)(R.taskName,{[R.pending]:"En attente"===r.status,[R.completed]:"Termin\xe9e"===r.status}),children:r.name}),(0,s.jsxs)("select",{value:r.status,onChange:t=>{return s=r.id,a=t.target.value,void n(e.map((e=>e.id===s?{...e,status:a}:e)));var s,a},children:[(0,s.jsx)("option",{value:"En attente",children:"En attente"}),(0,s.jsx)("option",{value:"Termin\xe9e",children:"Termin\xe9e"})]}),(0,s.jsx)("button",{className:R.deleteBtn,onClick:()=>{return t=r.id,void n(e.filter((e=>e.id!==t)));var t},children:"Supprimer"})]},r.id)))})]})},Q=[{id:1,question:"Quelle est la capitale du B\xe9nin ?",options:["Porto-Novo","Dassa-Zounm\xe8","Cotonou","Lokossa"],correctAnswer:"Porto-Novo"},{id:2,question:"Quelle est la langue dominante au B\xe9nin ?",options:["S\xe8t\xf4","Fon","Yoruba","Adja"],correctAnswer:"Fon"},{id:3,question:"Combien font 2 + 2 ?",options:["3","4","5","6"],correctAnswer:"4"}],J=()=>{const[e,n]=(0,u.useState)({}),[r,t]=(0,u.useState)(!1),a=Q.reduce(((n,r)=>(e[r.id]===r.correctAnswer&&(n+=1),n)),0);return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Simulateur de questionnaire"}),(0,s.jsx)("div",{className:R.formGroup,children:Q.map((t=>(0,s.jsxs)("div",{className:R.question,children:[(0,s.jsx)("p",{children:t.question}),(0,s.jsx)("div",{className:R.options,children:t.options.map((a=>(0,s.jsxs)("label",{children:[(0,s.jsx)("input",{type:"radio",name:`question-${t.id}`,value:a,checked:e[t.id]===a,onChange:()=>{return r=t.id,s=a,void n({...e,[r]:s});var r,s},disabled:r}),a]},a)))})]},t.id)))}),(0,s.jsx)("button",{onClick:()=>{t(!0)},disabled:r,className:R.PgCompBtn,children:"Soumettre le test"}),r&&(0,s.jsx)("div",{className:R.inlineResult,children:(0,s.jsxs)("h3",{children:["Votre note : ",a," / ",Q.length]})})]})};var V=r(4731),W=r(2022);W.t1.register(W.PP,W.kc,W.FN,W.No,W.E8,W.Bs,W.hE,W.m_,W.s$);const O={labels:["Jan","F\xe9v","Mars","Avr","Mai","Juin"],datasets:[{label:"D\xe9penses",data:[500,700,300,800,600,400],backgroundColor:"rgba(255, 99, 132, 0.5)",borderColor:"rgb(255, 99, 132)",tension:.1},{label:"Revenus",data:[1e3,1200,900,1300,1100,1400],backgroundColor:"rgba(54, 162, 235, 0.5)",borderColor:"rgb(54, 162, 235)",tension:.1}]},Y={labels:["D\xe9penses","Revenus"],datasets:[{data:[3700,6e3],backgroundColor:["rgb(255, 99, 132)","rgb(54, 162, 235)"],hoverBackgroundColor:["rgb(255, 159, 192)","rgb(75, 192, 235)"]}]},Z={responsive:!0,maintainAspectRatio:!1,plugins:{title:{display:!0,text:"Performance de l'entreprise"},tooltip:{mode:"index",intersect:!1},legend:{labels:{font:{size:12}}}},scales:{x:{ticks:{font:{size:10}}},y:{ticks:{font:{size:10}}}}},X=()=>{const[e,n]=(0,u.useState)("line");return(0,s.jsxs)("div",{className:R.PgCompCont,children:[(0,s.jsx)("h2",{children:"Tableau de bord"}),(0,s.jsxs)("div",{className:R.chartSelector,children:[(0,s.jsx)("label",{htmlFor:"chartType",children:"Type de graphique :"}),(0,s.jsxs)("select",{id:"chartType",value:e,onChange:e=>n(e.target.value),children:[(0,s.jsx)("option",{value:"line",children:"Ligne"}),(0,s.jsx)("option",{value:"doughnut",children:"Anneau"}),(0,s.jsx)("option",{value:"bar",children:"Barres"})]})]}),(0,s.jsx)("div",{className:R.chartContainer,children:(()=>{switch(e){case"line":default:return(0,s.jsx)(V.N1,{data:O,options:Z});case"doughnut":return(0,s.jsx)(V.nu,{data:Y});case"bar":return(0,s.jsx)(V.yP,{data:O,options:Z})}})()}),(0,s.jsxs)("div",{className:R.summaryContainer,children:[(0,s.jsxs)("div",{className:R.summaryBox,children:[(0,s.jsx)("h3",{children:"D\xe9penses totales"}),(0,s.jsx)("p",{children:"3 700 francs CFA"})]}),(0,s.jsxs)("div",{className:R.summaryBox,children:[(0,s.jsx)("h3",{children:"Revenus totaux"}),(0,s.jsx)("p",{children:"6 000 francs CFA"})]}),(0,s.jsxs)("div",{className:R.summaryBox,children:[(0,s.jsx)("h3",{children:"B\xe9n\xe9fice"}),(0,s.jsx)("p",{children:"2 300 francs CFA"})]})]})]})},K=()=>{const[e,n]=(0,u.useState)("none");let r;switch(e){case"Invoice":r=B;break;case"Expense":r=q;break;case"Payslip":r=L;break;case"Contrat":r=H;break;case"Employee":r=M;break;case"Mail":r=z;break;case"Document":r=G;break;case"Task":r=U;break;case"Quiz":r=J;break;case"Dashboard":r=X;break;default:r=null}return(0,s.jsxs)("div",{style:{display:"flex",justifyContent:"center",flexDirection:"column"},children:[(0,s.jsxs)("select",{onChange:e=>{n(e.target.value)},value:e,style:{marginBottom:"10px",padding:"10px",border:"1px solid #ccc",borderRadius:"5px"},children:[(0,s.jsx)("option",{value:"none",children:"-- Selectionner --"}),(0,s.jsx)("option",{value:"Invoice",children:"Facture"}),(0,s.jsx)("option",{value:"Expense",children:"D\xe9penses"}),(0,s.jsx)("option",{value:"Payslip",children:"Fiche de paie"}),(0,s.jsx)("option",{value:"Contrat",children:"Contrat"}),(0,s.jsx)("option",{value:"Employee",children:"Employ\xe9"}),(0,s.jsx)("option",{value:"Mail",children:"Couriel"}),(0,s.jsx)("option",{value:"Document",children:"Importer document"}),(0,s.jsx)("option",{value:"Task",children:"T\xe2ches"}),(0,s.jsx)("option",{value:"Quiz",children:"Question \xe0 choix multiple"}),(0,s.jsx)("option",{value:"Dashboard",children:"Tableau de bord"})]}),(0,s.jsx)("div",{children:r?(0,s.jsx)(r,{}):(0,s.jsx)("p",{children:"Aucun simulateur s\xe9lectionn\xe9."})})]})};function $(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur de facture" {} showLineNumbers',children:'  const Invoice = () => {\r\n  const [clientName, setClientName] = useState(\'\');\r\n  const [amount, setAmount] = useState(\'\');\r\n  const [date, setDate] = useState(\'\');\r\n  const [status, setStatus] = useState(\'Non pay\xe9\');\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [invoicePreview, setInvoicePreview] = useState(null);\r\n\r\n  const generateInvoicePreview = (e) => {\r\n    e.preventDefault();\r\n    if (clientName.trim() && amount.trim() && !isNaN(amount)) {\r\n      setInvoicePreview({\r\n        clientName,\r\n        amount,\r\n        date,\r\n        status,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addInvoice = () => {\r\n    if (invoicePreview) {\r\n      setInvoices([...invoices, { ...invoicePreview, id: Date.now() }]);\r\n      setClientName(\'\');\r\n      setAmount(\'\');\r\n      setDate(\'\');\r\n      setStatus(\'Non pay\xe9\');\r\n      setInvoicePreview(null);\r\n    }\r\n  };\r\n\r\n  const updateInvoiceStatus = (id, newStatus) => {\r\n    setInvoices(invoices.map((inv) => (inv.id === id ? { ...inv, status: newStatus } : inv)));\r\n  };\r\n\r\n  const totalDue = invoices\r\n    .filter((inv) => inv.status === \'Non pay\xe9\')\r\n    .reduce((sum, inv) => sum + parseFloat(inv.amount), 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de facture</h2>\r\n\r\n      <form onSubmit={generateInvoicePreview}>\r\n        <div>\r\n          <label htmlFor="clientName">Nom du client :</label>\r\n          <input\r\n            type="text"\r\n            id="clientName"\r\n            value={clientName}\r\n            onChange={(e) => setClientName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="amount">Montant (francs CFA) :</label>\r\n          <input\r\n            type="number"\r\n            id="amount"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="date">Date :</label>\r\n          <input\r\n            type="date"\r\n            id="date"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="status">Statut :</label>\r\n          <select\r\n            id="status"\r\n            value={status}\r\n            onChange={(e) => setStatus(e.target.value)}\r\n          >\r\n            <option value="Non pay\xe9">Non pay\xe9</option>\r\n            <option value="Pay\xe9">Pay\xe9</option>\r\n          </select>\r\n        </div>\r\n        <button type="submit">Voir la facture</button>\r\n      </form>\r\n\r\n      {invoicePreview && (\r\n        <div>\r\n          <h2>Aper\xe7u</h2>\r\n          <p>\r\n            <strong>Nom du client :</strong> {invoicePreview.clientName}\r\n          </p>\r\n          <p>\r\n            <strong>Montant :</strong> {invoicePreview.amount}  francs CFA\r\n          </p>\r\n          <p>\r\n            <strong>Date :</strong> {invoicePreview.date}\r\n          </p>\r\n          <p>\r\n            <strong>Statut :</strong> {invoicePreview.status}\r\n          </p>\r\n          <button onClick={addInvoice}>Ajouter \xe0 la liste des factures</button>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <h2>Liste des factures</h2>\r\n        <ul>\r\n          {invoices.map((inv) => (\r\n            <li key={inv.id}>\r\n              <span>\r\n                {inv.date} : {inv.clientName} - {inv.amount} francs CFA ({inv.status})\r\n              </span>\r\n              <select\r\n                value={inv.status}\r\n                onChange={(e) => updateInvoiceStatus(inv.id, e.target.value)}\r\n              >\r\n                <option value="Non pay\xe9">Non pay\xe9</option>\r\n                <option value="Pay\xe9">Pay\xe9</option>\r\n              </select>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Total \xe0 payer : {totalDue.toFixed(0)}  francs CFA</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\n'})})}function ee(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)($,{...e})}):$(e)}function ne(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur de d\xe9penses" {} showLineNumbers',children:"  const Expense = () => {\r\n  const [expense, setExpense] = useState({\r\n    description: '',\r\n    amount: '',\r\n    category: 'Alimentation',\r\n  });\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const categories = ['Alimentation', 'Transport', 'Divertissement', 'Factures', 'Autre'];\r\n\r\n  const handleAddExpense = () => {\r\n    if (expense.description && expense.amount && !isNaN(expense.amount)) {\r\n      const newExpense = { ...expense, id: Date.now() };\r\n      const newExpenses = [...expenses, newExpense];\r\n      setExpenses(newExpenses);\r\n      setTotal(newExpenses.reduce((sum, item) => sum + parseFloat(item.amount), 0));\r\n      setExpense({ description: '', amount: '', category: 'Alimentation' });\r\n    } else {\r\n      alert('Veuillez entrer des d\xe9tails valides pour la d\xe9pense.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de d\xe9penses</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={expense.description}\r\n          onChange={(e) => setExpense({ ...expense, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Montant\"\r\n          value={expense.amount}\r\n          onChange={(e) => setExpense({ ...expense, amount: e.target.value })}\r\n        />\r\n        <select\r\n          value={expense.category}\r\n          onChange={(e) => setExpense({ ...expense, category: e.target.value })}\r\n        >\r\n          {categories.map((category) => (\r\n            <option key={category} value={category}>\r\n              {category}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleAddExpense}>Ajouter la d\xe9pense</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Liste des d\xe9penses</h2>\r\n        <ul>\r\n          {expenses.map((exp) => (\r\n            <li key={exp.id}>\r\n              <span>\r\n                {exp.description} : {exp.amount} francs CFA ({exp.category})\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Total des d\xe9penses : {total.toFixed(0)} francs CFA</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\n"})})}function re(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ne,{...e})}):ne(e)}function te(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur de salaire" {} showLineNumbers',children:'  const Payslip = () => {\r\n  const [employeeName, setEmployeeName] = useState(\'\');\r\n  const [basicSalary, setBasicSalary] = useState(\'\');\r\n  const [taxRate, setTaxRate] = useState(\'\');\r\n  const [payslipPreview, setPayslipPreview] = useState(null);\r\n\r\n  const calculatePayslip = (e) => {\r\n    e.preventDefault();\r\n    const grossSalary = parseFloat(basicSalary);\r\n    const tax = grossSalary * (parseFloat(taxRate) / 100);\r\n    const netSalary = grossSalary - tax;\r\n\r\n    setPayslipPreview({\r\n      employeeName,\r\n      grossSalary,\r\n      tax,\r\n      netSalary,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de salaire</h2>\r\n      <form onSubmit={calculatePayslip}>\r\n        <div>\r\n          <label htmlFor="employeeName">Nom de l\'employ\xe9 :</label>\r\n          <input\r\n            type="text"\r\n            id="employeeName"\r\n            value={employeeName}\r\n            onChange={(e) => setEmployeeName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="basicSalary">Salaire de Base (francs CFA) :</label>\r\n          <input\r\n            type="number"\r\n            id="basicSalary"\r\n            value={basicSalary}\r\n            onChange={(e) => setBasicSalary(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="taxRate">Taux d\'Imposition (%) :</label>\r\n          <input\r\n            type="number"\r\n            id="taxRate"\r\n            value={taxRate}\r\n            onChange={(e) => setTaxRate(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type="submit">G\xe9n\xe9rer la fiche</button>\r\n      </form>\r\n\r\n      {payslipPreview && (\r\n        <div>\r\n          <h2>Aper\xe7u</h2>\r\n          <p>\r\n            <strong>Nom de l\'employ\xe9 :</strong> {payslipPreview.employeeName}\r\n          </p>\r\n          <p>\r\n            <strong>Salaire Brut :</strong> {payslipPreview.grossSalary.toFixed(2)}  francs CFA\r\n          </p>\r\n          <p>\r\n            <strong>Imp\xf4ts :</strong> {payslipPreview.tax.toFixed(2)}  francs CFA\r\n          </p>\r\n          <p>\r\n            <strong>Salaire Net :</strong> {payslipPreview.netSalary.toFixed(2)}  francs CFA\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\n'})})}function se(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(te,{...e})}):te(e)}function ae(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur de contrat" {} showLineNumbers',children:'  const Contrat = () => {\r\n  const [employeeName, setEmployeeName] = useState(\'\');\r\n  const [position, setPosition] = useState(\'\');\r\n  const [startDate, setStartDate] = useState(\'\');\r\n  const [salary, setSalary] = useState(\'\');\r\n  const [contractPreview, setContractPreview] = useState(null);\r\n\r\n  const generateContract = (e) => {\r\n    e.preventDefault();\r\n    setContractPreview({\r\n      employeeName,\r\n      position,\r\n      startDate,\r\n      salary,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de Contrat</h2>\r\n      <form onSubmit={generateContract}>\r\n        <div>\r\n          <label htmlFor="employeeName">Nom de l\'employ\xe9 :</label>\r\n          <input\r\n            type="text"\r\n            id="employeeName"\r\n            value={employeeName}\r\n            onChange={(e) => setEmployeeName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="position">Poste :</label>\r\n          <input\r\n            type="text"\r\n            id="position"\r\n            value={position}\r\n            onChange={(e) => setPosition(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="startDate">Date de d\xe9but :</label>\r\n          <input\r\n            type="date"\r\n            id="startDate"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor="salary">Salaire (francs CFA) :</label>\r\n          <input\r\n            type="number"\r\n            id="salary"\r\n            value={salary}\r\n            onChange={(e) => setSalary(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type="submit">G\xe9n\xe9rer le Contrat</button>\r\n      </form>\r\n\r\n      {contractPreview && (\r\n        <div>\r\n          <h2>Aper\xe7u</h2>\r\n          <p>\r\n            <strong>Nom de l\'employ\xe9 :</strong> {contractPreview.employeeName}\r\n          </p>\r\n          <p>\r\n            <strong>Poste :</strong> {contractPreview.position}\r\n          </p>\r\n          <p>\r\n            <strong>Date de d\xe9but :</strong> {contractPreview.startDate}\r\n          </p>\r\n          <p>\r\n            <strong>Salaire mensuel :</strong> {contractPreview.salary} francs CFA\r\n          </p>\r\n          <p>\r\n            Ce contrat confirme que <strong>{contractPreview.employeeName}</strong> sera employ\xe9(e) en tant que <strong>{contractPreview.position}</strong>, \xe0 partir du <strong>{contractPreview.startDate}</strong>, avec un salaire de <strong>{contractPreview.salary} francs CFA</strong> par mois.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\n'})})}function oe(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ae,{...e})}):ae(e)}function ie(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur Gestion employ\xe9s" {} showLineNumbers',children:"  const Employee = () => {\r\n  const [employees, setEmployees] = useState([\r\n    { id: 1, name: 'Alice', presentDays: 20, absentDays: 2 },\r\n    { id: 2, name: 'Bob', presentDays: 18, absentDays: 4 },\r\n    { id: 3, name: 'Charlie', presentDays: 22, absentDays: 0 },\r\n  ]);\r\n  const [newEmployee, setNewEmployee] = useState('');\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [bestEmployee, setBestEmployee] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (employees.length > 0) {\r\n      const best = employees.reduce((prev, current) => {\r\n        const prevRatio = prev.presentDays / (prev.presentDays + prev.absentDays || 1);\r\n        const currRatio = current.presentDays / (current.presentDays + current.absentDays || 1);\r\n        return currRatio > prevRatio ? current : prev;\r\n      });\r\n      setBestEmployee(best);\r\n    }\r\n  }, [employees]);\r\n\r\n  useEffect(() => {\r\n    if (selectedEmployee) {\r\n      const updatedEmployee = employees.find((emp) => emp.id === selectedEmployee.id);\r\n      setSelectedEmployee(updatedEmployee);\r\n    }\r\n  }, [employees, selectedEmployee]);\r\n\r\n  const addEmployee = () => {\r\n    if (newEmployee.trim()) {\r\n      setEmployees([\r\n        ...employees,\r\n        { id: Date.now(), name: newEmployee, presentDays: 0, absentDays: 0 },\r\n      ]);\r\n      setNewEmployee('');\r\n    }\r\n  };\r\n\r\n  const updateAttendance = (id, type) => {\r\n    setEmployees(\r\n      employees.map((emp) =>\r\n        emp.id === id\r\n          ? {\r\n              ...emp,\r\n              presentDays: type === 'present' ? emp.presentDays + 1 : emp.presentDays,\r\n              absentDays: type === 'absent' ? emp.absentDays + 1 : emp.absentDays,\r\n            }\r\n          : emp\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur Gestion employ\xe9s</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Entrez le nom de l'employ\xe9\"\r\n          value={newEmployee}\r\n          onChange={(e) => setNewEmployee(e.target.value)}\r\n        />\r\n        <button onClick={addEmployee}>Ajouter l'Employ\xe9</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Liste des employ\xe9s</h2>\r\n        <ul>\r\n          {employees.map((emp) => (\r\n            <li key={emp.id}>\r\n              <span onClick={() => setSelectedEmployee(emp)}>{emp.name}</span>\r\n              <div>\r\n                <button onClick={() => updateAttendance(emp.id, 'present')}>+ Pr\xe9sent</button>\r\n                <button onClick={() => updateAttendance(emp.id, 'absent')}>+ Absent</button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {selectedEmployee && (\r\n        <div>\r\n          <h2>Aper\xe7u de {selectedEmployee.name}</h2>\r\n          <p>Jours pr\xe9sents : {selectedEmployee.presentDays}</p>\r\n          <p>Jours absents : {selectedEmployee.absentDays}</p>\r\n          <p>Total des jours : {selectedEmployee.presentDays + selectedEmployee.absentDays}</p>\r\n        </div>\r\n      )}\r\n\r\n      {bestEmployee && (\r\n        <div>\r\n          <h2>\ud83c\udfc6 Meilleur employ\xe9 : {bestEmployee.name}</h2>\r\n          <p>\r\n            F\xe9licitations {bestEmployee.name} ! Vous avez un total de {bestEmployee.presentDays}{' '}\r\n            jours de pr\xe9sence contre {bestEmployee.absentDays} jours d'absence, atteignant un\r\n            ratio de performance de{' '}\r\n            {(\r\n              (bestEmployee.presentDays /\r\n                (bestEmployee.presentDays + bestEmployee.absentDays || 1)) *\r\n              100\r\n            ).toFixed(2)}\r\n            %.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\n"})})}function le(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ie,{...e})}):ie(e)}function ce(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur de courriel" {} showLineNumbers',children:'  const Mail = () => {\r\n    const [recipient, setRecipient] = useState(\'\');\r\n    const [subject, setSubject] = useState(\'\');\r\n    const [message, setMessage] = useState(\'\');\r\n    const [emailPreview, setEmailPreview] = useState(null);\r\n\r\n    const sendEmail = (e) => {\r\n      e.preventDefault();\r\n      setEmailPreview({\r\n        recipient,\r\n        subject,\r\n        message,\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h2>Simulateur de courriel</h2>\r\n        <form onSubmit={sendEmail}>\r\n          <div>\r\n            <label htmlFor="recipient">Destinataire :</label>\r\n            <input\r\n              type="email"\r\n              id="recipient"\r\n              value={recipient}\r\n              onChange={(e) => setRecipient(e.target.value)}\r\n              placeholder="exemple@domaine.com"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor="subject">Objet :</label>\r\n            <input\r\n              type="text"\r\n              id="subject"\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor="message">Message :</label>\r\n            <textarea\r\n              id="message"\r\n              rows="5"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              placeholder="\xc9crivez votre message ici..."\r\n            />\r\n          </div>\r\n          <button type="submit">Envoyer l\'email</button>\r\n        </form>\r\n\r\n        {emailPreview && (\r\n          <div>\r\n            <h2>Aper\xe7u</h2>\r\n            <p>\r\n              <strong>\xc0 :</strong> {emailPreview.recipient}\r\n            </p>\r\n            <p>\r\n              <strong>Objet :</strong> {emailPreview.subject}\r\n            </p>\r\n            <p>\r\n              <strong>Message :</strong>\r\n            </p>\r\n            <p>{emailPreview.message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n};\n'})})}function ue(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ce,{...e})}):ce(e)}function de(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur de documents" {} showLineNumbers',children:'  const Document = () => {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [currentFile, setCurrentFile] = useState(null);\r\n  const [filePreview, setFilePreview] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setCurrentFile(file);\r\n      const objectUrl = URL.createObjectURL(file);\r\n      setFilePreview(objectUrl);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (currentFile) {\r\n      setDocuments([...documents, currentFile]);\r\n      setCurrentFile(null);\r\n      setFilePreview(null);\r\n    } else {\r\n      alert("Veuillez s\xe9lectionner un fichier \xe0 t\xe9l\xe9verser.");\r\n    }\r\n  };\r\n\r\n  const handleDelete = (file) => {\r\n    setDocuments(documents.filter((document) => document !== file));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de documents</h2>\r\n\r\n      <div>\r\n        <input\r\n          type="file"\r\n          onChange={handleFileChange}\r\n          accept=".pdf, .doc, .docx, .jpg, .png"\r\n        />\r\n        {filePreview && (\r\n          <div>\r\n            <h2>Aper\xe7u</h2>\r\n            <div>\r\n              {currentFile.type.startsWith(\'image/\') ? (\r\n                <img src={filePreview} alt="aper\xe7u" style={{ maxWidth: \'50%\' }} />\r\n              ) : (\r\n                <p>Aper\xe7u du fichier non disponible</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <button onClick={handleUpload} disabled={!currentFile}>\r\n          T\xe9l\xe9charger le document\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Documents t\xe9l\xe9charg\xe9s</h2>\r\n        <ul>\r\n          {documents.map((file, index) => (\r\n            <li key={index}>\r\n              <span>{file.name}</span>\r\n              <button onClick={() => handleDelete(file)}>Supprimer</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\n'})})}function pe(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(de,{...e})}):de(e)}function me(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur de t\xe2che" {} showLineNumbers',children:"  const Task = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('Toutes');\r\n\r\n  const addTask = () => {\r\n    if (newTask.trim()) {\r\n      setTasks([...tasks, { id: Date.now(), name: newTask, status: 'En attente' }]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const updateTaskStatus = (id, status) => {\r\n    setTasks(tasks.map((task) => (task.id === id ? { ...task, status } : task)));\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const filteredTasks =\r\n    statusFilter === 'Toutes'\r\n      ? tasks\r\n      : tasks.filter((task) => task.status === statusFilter);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de t\xe2che</h2>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ajouter une nouvelle t\xe2che\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button onClick={addTask}>Ajouter</button>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Filtrer par statut :</label>\r\n        <select value={statusFilter} onChange={(e) => setStatusFilter(e.target.value)}>\r\n          <option value=\"Toutes\">Toutes</option>\r\n          <option value=\"En attente\">En attente</option>\r\n          <option value=\"Termin\xe9e\">Termin\xe9e</option>\r\n        </select>\r\n      </div>\r\n\r\n      <ul>\r\n        {filteredTasks.map((task) => (\r\n          <li key={task.id}>\r\n            <span\r\n              style={{\r\n                textDecoration: task.status === 'Termin\xe9e' ? 'line-through' : 'none',\r\n                color: task.status === 'En attente' ? 'red' : 'green',\r\n              }}\r\n            >\r\n              {task.name}\r\n            </span>\r\n\r\n            <select\r\n              value={task.status}\r\n              onChange={(e) => updateTaskStatus(task.id, e.target.value)}\r\n            >\r\n              <option value=\"En attente\">En attente</option>\r\n              <option value=\"Termin\xe9e\">Termin\xe9e</option>\r\n            </select>\r\n            <button onClick={() => deleteTask(task.id)}>Supprimer</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<Task />);\n"})})}function ve(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(me,{...e})}):me(e)}function he(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Simulateur de questionnaire" {} showLineNumbers',children:"  const questions = [\r\n  {\r\n    id: 1,\r\n    question: 'Quelle est la capitale du B\xe9nin ?',\r\n    options: ['Porto-Novo', 'Dassa-Zounm\xe8', 'Cotonou', 'Lokossa'],\r\n    correctAnswer: 'Porto-Novo',\r\n  },\r\n  {\r\n    id: 2,\r\n    question: 'Quelle est la langue dominante au B\xe9nin ?',\r\n    options: ['S\xe8t\xf4', 'Fon', 'Yoruba', 'Adja'],\r\n    correctAnswer: 'Fon',\r\n  },\r\n  {\r\n    id: 3,\r\n    question: 'Combien font 2 + 2 ?',\r\n    options: ['3', '4', '5', '6'],\r\n    correctAnswer: '4',\r\n  },\r\n];\r\n\r\nconst Quiz = () => {\r\n  const [answers, setAnswers] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  const handleChange = (questionId, selectedAnswer) => {\r\n    setAnswers({ ...answers, [questionId]: selectedAnswer });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  const score = questions.reduce((score, question) => {\r\n    if (answers[question.id] === question.correctAnswer) {\r\n      score += 1;\r\n    }\r\n    return score;\r\n  }, 0);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Simulateur de questionnaire</h2>\r\n\r\n      <div>\r\n        {questions.map((question) => (\r\n          <div key={question.id}>\r\n            <p>{question.question}</p>\r\n            <div>\r\n              {question.options.map((option) => (\r\n                <label key={option}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`question-${question.id}`}\r\n                    value={option}\r\n                    checked={answers[question.id] === option}\r\n                    onChange={() => handleChange(question.id, option)}\r\n                    disabled={isSubmitted}\r\n                  />\r\n                  {option}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        onClick={handleSubmit}\r\n        disabled={isSubmitted}\r\n      >\r\n        Soumettre le test\r\n      </button>\r\n\r\n      {isSubmitted && (\r\n        <div>\r\n          <h3>Votre note : {score} / {questions.length}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n```\n"})})}function xe(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(he,{...e})}):he(e)}function ge(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:'title="Tableau de bord" {} showLineNumbers',children:"  const data = {\r\n  labels: ['Jan', 'F\xe9v', 'Mars', 'Avr', 'Mai', 'Juin'],\r\n  datasets: [\r\n    {\r\n      label: 'D\xe9penses',\r\n      data: [500, 700, 300, 800, 600, 400],\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      borderColor: 'rgb(255, 99, 132)',\r\n      tension: 0.1,\r\n    },\r\n    {\r\n      label: 'Revenus',\r\n      data: [1000, 1200, 900, 1300, 1100, 1400],\r\n      backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n      borderColor: 'rgb(54, 162, 235)',\r\n      tension: 0.1,\r\n    },\r\n  ],\r\n};\r\n\r\nconst doughnutData = {\r\n  labels: ['D\xe9penses', 'Revenus'],\r\n  datasets: [\r\n    {\r\n      data: [3700, 6000],\r\n      backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)'],\r\n      hoverBackgroundColor: ['rgb(255, 159, 192)', 'rgb(75, 192, 235)'],\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false, \r\n  plugins: {\r\n    title: {\r\n      display: true,\r\n      text: \"Performance de l'entreprise\",\r\n    },\r\n    tooltip: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n    legend: {\r\n      labels: {\r\n        font: {\r\n          size: 12,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    x: {\r\n      ticks: {\r\n        font: {\r\n          size: 10,\r\n        },\r\n      },\r\n    },\r\n    y: {\r\n      ticks: {\r\n        font: {\r\n          size: 10,\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [selectedChart, setSelectedChart] = useState('line');\r\n\r\n  const renderChart = () => {\r\n    switch (selectedChart) {\r\n      case 'line':\r\n        return <Line data={data} options={options} />;\r\n      case 'doughnut':\r\n        return <Doughnut data={doughnutData} />;\r\n      case 'bar':\r\n        return <Bar data={data} options={options} />;\r\n      default:\r\n        return <Line data={data} options={options} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tableau de bord</h2>\r\n\r\n      <div>\r\n        <label htmlFor=\"chartType\">Type de graphique :</label>\r\n        <select\r\n          id=\"chartType\"\r\n          value={selectedChart}\r\n          onChange={(e) => setSelectedChart(e.target.value)}\r\n        >\r\n          <option value=\"line\">Ligne</option>\r\n          <option value=\"doughnut\">Anneau</option>\r\n          <option value=\"bar\">Barres</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        {renderChart()}\r\n      </div>\r\n\r\n      <div>\r\n        <div>\r\n          <h3>D\xe9penses totales</h3>\r\n          <p>3 700 francs CFA</p>\r\n        </div>\r\n        <div>\r\n          <h3>Revenus totaux</h3>\r\n          <p>6 000 francs CFA</p>\r\n        </div>\r\n        <div>\r\n          <h3>B\xe9n\xe9fice</h3>\r\n          <p>2 300 francs CFA</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\n"})})}function ye(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(ge,{...e})}):ge(e)}const be=()=>{const[e,n]=(0,u.useState)("none");let r;switch(e){case"Invoice":r=ee;break;case"Expense":r=re;break;case"Payslip":r=se;break;case"Contrat":r=oe;break;case"Employee":r=le;break;case"Mail":r=ue;break;case"Document":r=pe;break;case"Task":r=ve;break;case"Quiz":r=xe;break;case"Dashboard":r=ye;break;default:r=null}return(0,s.jsxs)("div",{style:{display:"flex",justifyContent:"center",flexDirection:"column"},children:[(0,s.jsxs)("select",{onChange:e=>{n(e.target.value)},value:e,style:{marginBottom:"10px",padding:"10px",border:"1px solid #ccc",borderRadius:"5px"},children:[(0,s.jsx)("option",{value:"none",children:"-- Selectionner --"}),(0,s.jsx)("option",{value:"Invoice",children:"Facture"}),(0,s.jsx)("option",{value:"Expense",children:"D\xe9penses"}),(0,s.jsx)("option",{value:"Payslip",children:"Fiche de paie"}),(0,s.jsx)("option",{value:"Contrat",children:"Contrat"}),(0,s.jsx)("option",{value:"Employee",children:"Employ\xe9"}),(0,s.jsx)("option",{value:"Mail",children:"Couriel"}),(0,s.jsx)("option",{value:"Document",children:"Importer document"}),(0,s.jsx)("option",{value:"Task",children:"T\xe2ches"}),(0,s.jsx)("option",{value:"Quiz",children:"Question \xe0 choix multiple"}),(0,s.jsx)("option",{value:"Dashboard",children:"Tableau de bord"})]}),(0,s.jsx)("div",{children:r?(0,s.jsx)(r,{}):(0,s.jsx)("p",{children:"Aucun simulateur s\xe9lectionn\xe9."})})]})};const je=function(){const[e,n]=(0,u.useState)({live:!0,view:!0,code:!0}),r=e=>{const{name:r,checked:t}=e.target;n((e=>({...e,[r]:t})))};return(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{className:d,children:[(0,s.jsxs)("label",{children:[(0,s.jsx)("input",{type:"checkbox",name:"live",checked:e.live,onChange:r}),(0,s.jsx)("span",{children:'Afficher "Editeur interactif"'})]}),(0,s.jsxs)("label",{children:[(0,s.jsx)("input",{type:"checkbox",name:"view",checked:e.view,onChange:r}),(0,s.jsx)("span",{children:'Afficher "Aper\xe7u"'})]}),(0,s.jsxs)("label",{children:[(0,s.jsx)("input",{type:"checkbox",name:"code",checked:e.code,onChange:r}),(0,s.jsx)("span",{children:'Afficher "Code"'})]})]}),(0,s.jsxs)("div",{className:d,children:[e.live&&(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{className:p,children:"Editeur interactif"})," ",(0,s.jsx)(I,{})]}),e.view&&(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{className:p,children:"Aper\xe7u uniquement"})," ",(0,s.jsx)(K,{})]}),e.code&&(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{className:p,children:"Code uniquement"})," ",(0,s.jsx)(be,{})]})]})]})};var Ce=r(539);const fe={title:"Playground",hide_table_of_contents:!0},Se=void 0,Ne={},De=[];function we(e){const n={i:"i",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("section",{className:c.A.PgHeroSection,children:(0,s.jsxs)("div",{className:c.A.PgHeroIntro,children:[(0,s.jsxs)("div",{className:c.A.PgHeroText,children:[(0,s.jsx)("h1",{children:(0,s.jsx)(Ce.A,{id:"Pg-HeroTitleDesk",description:"Le titre de Hero sur Playground",values:{icon:(0,s.jsx)(n.i,{className:"fas fa-terminal"})},children:"Bienvenue dans le playground {icon}"})}),(0,s.jsx)("h1",{children:(0,s.jsx)(Ce.A,{id:"Pg-HeroTitleMob",description:"Le titre de Hero sur Playground",values:{icon:(0,s.jsx)(n.i,{className:"fas fa-terminal"})},children:"Bienvenue {icon}"})}),(0,s.jsx)("p",{children:(0,s.jsx)(Ce.A,{id:"Pg-HeroSubtitle",description:"Le sous-titre de Hero sur Playground",children:"D\xe9couvrez, testez, et exp\xe9rimentez les fonctionnalit\xe9s de notre plateforme."})}),(0,s.jsxs)("div",{className:c.A.PgHeroLink,children:[(0,s.jsx)(l.A,{href:"/docs/dev/playground#guide",children:(0,s.jsx)(Ce.A,{id:"Pg-HeroGuide",description:"Le lien du guide sur Hero de Playground",values:{icon:(0,s.jsx)(n.i,{className:"fas fa-question-circle"})},children:"{icon} Comment faire ?"})}),(0,s.jsx)("span",{className:c.A.LinkSep,children:" | "}),(0,s.jsx)(l.A,{href:"/docs/dev/playground#rules",children:(0,s.jsx)(Ce.A,{id:"Pg-HeroRules",description:"Le lien du regles sur Hero de Playground",values:{icon:(0,s.jsx)(n.i,{className:"fas fa-map-signs"})},children:"{icon} Pr\xe9caution et manipulation"})})]})]}),(0,s.jsx)("div",{className:c.A.PgHeroImg,children:(0,s.jsx)(o.A,{alt:(0,Ce.T)({id:"Pg-HeroImg",message:"API R\xe9f\xe9rence",description:"Illustration de Hero sur Index"}),sources:{light:(0,i.Ay)("/img/Pgd-ApiW.png"),dark:(0,i.Ay)("/img/Pgd-ApiB.png")}})})]})}),"\n",(0,s.jsxs)("section",{className:c.A.PgTestSection,children:[(0,s.jsxs)("div",{className:c.A.PgTestIntro,children:[(0,s.jsxs)("h1",{children:[(0,s.jsx)("i",{className:"fas fa-table-tennis-paddle-ball"})," A vous de jouer"]}),(0,s.jsx)("p",{children:"Choisissez un des \xe9l\xe9ments dans la liste d\xe9roulante."})]}),(0,s.jsx)(je,{})]}),"\n",(0,s.jsx)("iframe",{src:"https://stackblitz.com/edit/pgsdocs?ctl=1&embed=1&file=README.md",width:"100%",height:"500px"})]})}function ke(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(we,{...e})}):we(e)}},7164:(e,n,r)=>{r.d(n,{A:()=>t});const t={mainContent:"mainContent_tLJM",IntroSection:"IntroSection_HH3U",HelpSection:"HelpSection_Q4yL",UserSection:"UserSection_AY_N",DocsSection:"DocsSection_mFaE",IntroCard:"IntroCard_FZjo",UserCard:"UserCard_gQax",DocsCard:"DocsCard_Snyk",HeroContainer:"HeroContainer_XHhF",HeroBanner:"HeroBanner_zpvc",HeroImage:"HeroImage_x2W2",HeroText:"HeroText_LxV3",HeroTitle:"HeroTitle_T6OT",HeroTitleVar:"HeroTitleVar_YNu_",HeroSubtitle:"HeroSubtitle_FQxr",HeroBtns:"HeroBtns_w4Se",IntroContainer:"IntroContainer_q8Cx",IntroBGImg:"IntroBGImg_i7JK",iconContainer:"iconContainer_y42M",IntroIcone:"IntroIcone_g03N",UserText:"UserText_gfwJ",UserImgContainer:"UserImgContainer_y3Pn",UserImg:"UserImg_EdKz",DocsContainer:"DocsContainer_YhAm",DocsCardTitle:"DocsCardTitle_JD3k",HelpImgContainer:"HelpImgContainer_EnBc",HelpImg:"HelpImg_mCLU",HelpText:"HelpText_lKfZ",HelpContCard:"HelpContCard_yLki",HelpCard:"HelpCard_vZqP",ToggleButton:"ToggleButton_VUR1",PgHeroSection:"PgHeroSection_UEN8",PgTestSection:"PgTestSection_Ac8T",PgHeroIntro:"PgHeroIntro_Nkl9",PgHeroText:"PgHeroText_Cu3z",PgHeroLink:"PgHeroLink_ApRg",ChangeColor:"ChangeColor_esyl",PgHeroImg:"PgHeroImg_KjkY",PgTestIntro:"PgTestIntro_TXnx",UserImage:"UserImage_Hwkx",LinkSep:"LinkSep_yDhP"}}}]);